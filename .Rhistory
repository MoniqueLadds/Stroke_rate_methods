View(predictions)
predictions<-predictions[complete.cases(predictions$stroke_rate),]
predictions$name<-droplevels(predictions$name)
##find the differences
names(predictions)
stroke<-data.frame(predictions[c(1,27:32)],
apply(predictions[2:26],2,diffs))
stroke<-stroke[complete.cases(stroke),]
indiv<-unique(as.character(stroke$name))
indiv<-indiv[!"Rocky"]
View(stroke)
predictions<-predictions[!predictions$id2=="Rocky2014-10-31swim1",]
predictions<-predictions[!predictions$id2=="Rocky2014-10-31swim1.csv",]
predictions<-predictions[complete.cases(predictions$stroke_rate),]
predictions$id2=="Rocky31-10-14_1.csv"
predictions<-predictions[!predictions$id2=="Rocky31-10-14_1.csv",]
rm(list=ls())
#########density plot
load("data/tape/Xpredictions.RData")
source("r/tape/Functions.R")
##add animal info and actual number of strokes to the data frame
dat<-read.csv("data/tape/odba_vo2_data.csv")
predictions<-merge(predictions,dat[,c(2,18:23)],all.x = TRUE, by = "id2")
predictions<-predictions[!predictions$id2=="Rocky31-10-14_1.csv",]
#predictions<-predictions[complete.cases(predictions$stroke_rate),]
predictions$name<-droplevels(predictions$name)
##find the differences
names(predictions)
stroke<-data.frame(predictions[c(1,27:32)],
apply(predictions[2:26],2,diffs))
stroke<-stroke[complete.cases(stroke),]
indiv<-unique(as.character(stroke$name))
l=1
indiv.mean<-apply(dat[20:44],2,mean)
indiv.mean<-apply(dat[8:36],2,mean)
indiv.mean<-apply(dat[8:32],2,mean)
indiv.mean<-apply(stroke[8:32],2,mean)
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-dat[,names(dat)==best.name]
#and the corresponding strokes
strokes<-dat$strokes
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
avg.diff<-mean(percent.diff$diff)
best.diff<-stroke[,names(stroke)==best.name]
#and the corresponding strokes
strokes<-dat$strokes
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
avg.diff<-mean(percent.diff$diff)
dat<-stroke[stroke$name==indiv[l],]
indiv.mean<-apply(stroke[8:32],2,mean)
#find the corresponding RM and gradient
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-stroke[,names(stroke)==best.name]
#and the corresponding strokes
strokes<-dat$strokes
#calculate the % diff
indiv.mean<-apply(dat[8:32],2,mean)
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-stroke[,names(stroke)==best.name]
#and the corresponding strokes
strokes<-dat$strokes
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
avg.diff<-mean(percent.diff$diff)
dat<-stroke[stroke$name==indiv[l],]
##Find the mean difference
indiv.mean<-apply(dat[8:32],2,mean)
#find the corresponding RM and gradient
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-stroke[,names(stroke)==best.name]
#and the corresponding strokes
strokes<-dat$strokes
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
strokes<-dat$stroke_rate
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
best.diff<-dat[,names(dat)==best.name]
#and the corresponding strokes
strokes<-dat$stroke_rate
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
avg.diff<-mean(percent.diff$diff)
View(percent.diff)
percent.diff$diff[which(percent.diff$diff==Inf)]<-0
avg.diff<-mean(percent.diff$diff)
output <- cbind(indiv[l],best.name,best.mean,avg.diff)
output
output<-NULL
for(l in 1:length(indiv))
#extract out individual
dat<-stroke[stroke$name==indiv[l],]
##Find the mean difference
indiv.mean<-apply(dat[8:32],2,mean)
#find the corresponding RM and gradient
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-dat[,names(dat)==best.name]
#and the corresponding strokes
strokes<-dat$stroke_rate
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
percent.diff$diff[which(percent.diff$diff==Inf)]<-0
avg.diff<-mean(percent.diff$diff)
output <- cbind(indiv[l],best.name,best.mean,avg.diff)
}
for(l in 1:length(indiv)){
#extract out individual
dat<-stroke[stroke$name==indiv[l],]
##Find the mean difference
indiv.mean<-apply(dat[8:32],2,mean)
#find the corresponding RM and gradient
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-dat[,names(dat)==best.name]
#and the corresponding strokes
strokes<-dat$stroke_rate
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
percent.diff$diff[which(percent.diff$diff==Inf)]<-0
avg.diff<-mean(percent.diff$diff)
output <- cbind(indiv[l],best.name,best.mean,avg.diff)
}
View(output)
predict<-NULL
predict<-rbind(predict,output)
output<-NULL
predict<-NULL
for(l in 1:length(indiv)){
#extract out individual
dat<-stroke[stroke$name==indiv[l],]
##Find the mean difference
indiv.mean<-apply(dat[8:32],2,mean)
#find the corresponding RM and gradient
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-dat[,names(dat)==best.name]
#and the corresponding strokes
strokes<-dat$stroke_rate
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
percent.diff$diff[which(percent.diff$diff==Inf)]<-0
avg.diff<-mean(percent.diff$diff)
output <- cbind(indiv[l],best.name,best.mean,avg.diff)
predict<-rbind(predict,output)
}
predict
output<-NULL
predict<-NULL
for(l in 1:length(indiv)){
#extract out individual
dat<-stroke[stroke$name==indiv[l],]
##Find the mean difference
indiv.mean<-apply(dat[8:32],2,mean)
#find the corresponding RM and gradient
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-dat[,names(dat)==best.name]
#and the corresponding strokes
strokes<-dat$stroke_rate
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
percent.diff$diff[which(percent.diff$diff==Inf)]<-0
avg.diff<-mean(percent.diff$diff)
output <- cbind(indiv[l],best.name,best.mean,avg.diff)
predict<-data.frame(rbind(predict,output)
}
output<-NULL
predict<-NULL
for(l in 1:length(indiv)){
#extract out individual
dat<-stroke[stroke$name==indiv[l],]
##Find the mean difference
indiv.mean<-apply(dat[8:32],2,mean)
#find the corresponding RM and gradient
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-dat[,names(dat)==best.name]
#and the corresponding strokes
strokes<-dat$stroke_rate
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
percent.diff$diff[which(percent.diff$diff==Inf)]<-0
avg.diff<-mean(percent.diff$diff)
output <- cbind(indiv[l],best.name,best.mean,avg.diff)
predict<-data.frame(rbind(predict,output))
}
View(predict)
dat<-stroke[stroke$name==indiv[1],]
dat<-stroke[stroke$name==indiv[2],]
dat<-stroke[stroke$name==indiv[3],]
dat<-stroke[stroke$name==indiv[4],]
dat<-stroke[stroke$name==indiv[5],]
dat<-stroke[stroke$name==indiv[6],]
#####Make the plots
rm(list=ls())
#########density plot
load("data/tape/Zpredictions.RData")
source("r/Functions.R")
##add animal info and actual number of strokes to the data frame
dat<-read.csv("data/tape/odba_vo2_data.csv")
predictions<-merge(predictions,dat[18:23],all.x = TRUE, by = "id2")
predictions<-predictions[!predictions$id2=="Rocky2014-10-31swim1",]
##find the differences
names(predictions)
stroke<-data.frame(predictions[c(1,27:31)],
apply(predictions[2:26],2,diffs))
stroke<-stroke[complete.cases(stroke),]
#####Make the plots
rm(list=ls())
#########density plot
load("data/tape/Zpredictions.RData")
source("r/tape/Functions.R")
##add animal info and actual number of strokes to the data frame
dat<-read.csv("data/tape/odba_vo2_data.csv")
predictions<-merge(predictions,dat[18:23],all.x = TRUE, by = "id2")
predictions<-predictions[!predictions$id2=="Rocky2014-10-31swim1",]
##find the differences
names(predictions)
stroke<-data.frame(predictions[c(1,27:31)],
apply(predictions[2:26],2,diffs))
stroke<-stroke[complete.cases(stroke),]
indiv<-unique(as.character(stroke$name))
output<-NULL
predict<-NULL
for(l in 1:length(indiv)){
#extract out individual
dat<-stroke[stroke$name==indiv[l],]
##Find the mean difference
indiv.mean<-apply(dat[8:32],2,mean)
#find the corresponding RM and gradient
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-dat[,names(dat)==best.name]
#and the corresponding strokes
strokes<-dat$stroke_rate
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
percent.diff$diff[which(percent.diff$diff==Inf)]<-0
avg.diff<-mean(percent.diff$diff)
output <- cbind(indiv[l],best.name,best.mean,avg.diff)
predict<-data.frame(rbind(predict,output))
}
stroke<-data.frame(predictions[c(1,27:32)],
apply(predictions[2:26],2,diffs))
predictions<-merge(predictions,dat[,c(2,18:23)],all.x = TRUE, by = "id2")
predictions<-predictions[!predictions$id2=="Rocky2014-10-31swim1",]
dat<-read.csv("data/tape/odba_vo2_data.csv")
predictions<-merge(predictions,dat[,c(2,18:23)],all.x = TRUE, by = "id2")
predictions<-predictions[!predictions$id2=="Rocky2014-10-31swim1",]
##find the differences
names(predictions)
stroke<-data.frame(predictions[c(1,27:32)],
apply(predictions[2:26],2,diffs))
stroke<-stroke[complete.cases(stroke),]
#####Make the plots
rm(list=ls())
#########density plot
load("data/tape/Zpredictions.RData")
source("r/tape/Functions.R")
##add animal info and actual number of strokes to the data frame
dat<-read.csv("data/tape/odba_vo2_data.csv")
predictions<-merge(predictions,dat[,c(2,18:23)],all.x = TRUE, by = "id2")
predictions<-predictions[!predictions$id2=="Rocky2014-10-31swim1",]
##find the differences
names(predictions)
stroke<-data.frame(predictions[c(1,27:32)],
apply(predictions[2:26],2,diffs))
stroke<-stroke[complete.cases(stroke),]
indiv<-unique(as.character(stroke$name))
#####Make the plots
rm(list=ls())
#########density plot
load("data/tape/Zpredictions.RData")
source("r/tape/Functions.R")
##add animal info and actual number of strokes to the data frame
dat<-read.csv("data/tape/odba_vo2_data.csv")
predictions<-merge(predictions,dat[,c(2,18:23)],all.x = TRUE, by = "id2")
predictions<-predictions[!predictions$id2=="Rocky31-10-14_1.csv",]
#predictions<-predictions[complete.cases(predictions$stroke_rate),]
predictions$name<-droplevels(predictions$name)
##find the differences
names(predictions)
stroke<-data.frame(predictions[c(1,27:32)],
apply(predictions[2:26],2,diffs))
stroke<-stroke[complete.cases(stroke),]
indiv<-unique(as.character(stroke$name))
output<-NULL
predict<-NULL
for(l in 1:length(indiv)){
#extract out individual
dat<-stroke[stroke$name==indiv[l],]
##Find the mean difference
indiv.mean<-apply(dat[8:32],2,mean)
#find the corresponding RM and gradient
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-dat[,names(dat)==best.name]
#and the corresponding strokes
strokes<-dat$stroke_rate
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
percent.diff$diff[which(percent.diff$diff==Inf)]<-0
avg.diff<-mean(percent.diff$diff)
output <- cbind(indiv[l],best.name,best.mean,avg.diff)
predict<-data.frame(rbind(predict,output))
}
predict
#####Make the plots
rm(list=ls())
#########density plot
load("data/tape/XZpredictions.RData")
source("r/tape/Functions.R")
##add animal info and actual number of strokes to the data frame
dat<-read.csv("data/tape/odba_vo2_data.csv")
predictions<-merge(predictions,dat[,c(2,18:23)],all.x = TRUE, by = "id2")
predictions<-predictions[!predictions$id2=="Rocky31-10-14_1.csv",]
predictions$name<-droplevels(predictions$name)
##find the differences
names(predictions)
stroke<-data.frame(predictions[c(1,27:32)],
apply(predictions[2:26],2,diffs))
stroke<-stroke[complete.cases(stroke),]
###individual errors
indiv<-unique(as.character(stroke$name))
output<-NULL
predict<-NULL
for(l in 1:length(indiv)){
#extract out individual
dat<-stroke[stroke$name==indiv[l],]
##Find the mean difference
indiv.mean<-apply(dat[8:32],2,mean)
#find the corresponding RM and gradient
best.name<-names(indiv.mean[abs(indiv.mean)==min(abs(indiv.mean))])
best.mean<-min(abs(indiv.mean))
#extract the best data
best.diff<-dat[,names(dat)==best.name]
#and the corresponding strokes
strokes<-dat$stroke_rate
#calculate the % diff
percent.diff<-data.frame(cbind(best.diff,strokes))
percent.diff$diff<-(percent.diff$best.diff+abs(percent.diff$strokes))/percent.diff$best.diff
percent.diff$diff[which(percent.diff$diff==Inf)]<-0
avg.diff<-mean(percent.diff$diff)
output <- cbind(indiv[l],best.name,best.mean,avg.diff)
predict<-data.frame(rbind(predict,output))
}
View(predict)
#make the histogram
#extract the data
plotData <- stroke$peak_0.4sec_10_dyn.xz
h<-hist(plotData, breaks=10,border="white", xlab="Predicitions",main="",
ylim=c(0,70),xlim=c(-50,100))
density_plot(plotData, "darkolivegreen1")
###function for the additional lines
density_lines<-function(lineData,col){
xfit<-seq(min(lineData),max(lineData),length=40)
yfit<-dnorm(xfit,mean=mean(lineData),sd=sd(lineData))
yfit <- yfit*diff(h$mids[1:2])*length(lineData)
lines(xfit, yfit, col=col, lwd=2)
}
#lineData <- stroke$peak_1sec_10_dyn.xz
#density_lines(lineData, "darkolivegreen")
#lineData <- stroke$peak_1sec_20_dyn.xz
#density_lines(lineData, "chartreuse")
lineData <- stroke$peak_1sec_30_dyn.xz
density_lines(lineData, "chartreuse3")
lineData <- stroke$peak_1sec_40_dyn.xz
density_lines(lineData, "chartreuse4")
lineData <- stroke$peak_1sec_50_dyn.xz
density_lines(lineData, "darkgreen")
#lineData <- stroke$peak_2sec_10_dyn.xz
#density_lines(lineData, "cadetblue1")
#lineData <- stroke$peak_2sec_20_dyn.xz
#density_lines(lineData, "deepskyblue")
lineData <- stroke$peak_2sec_30_dyn.xz
density_lines(lineData, "blue")
lineData <- stroke$peak_2sec_40_dyn.xz
density_lines(lineData, "cadetblue4")
lineData <- stroke$peak_2sec_50_dyn.xz
density_lines(lineData, "blue4")
#lineData <- stroke$peak_3sec_10_dyn.xz
#density_lines(lineData, "tan")
#lineData <- stroke$peak_3sec_20_dyn.xz
#density_lines(lineData, "orange")
lineData <- stroke$peak_3sec_30_dyn.xz
density_lines(lineData, "darkorange")
lineData <- stroke$peak_3sec_40_dyn.xz
density_lines(lineData, "coral")
lineData <- stroke$peak_3sec_50_dyn.xz
density_lines(lineData, "darkorange4")
#lineData <- stroke$peak_4sec_10_dyn.xz
#density_lines(lineData, "indianred")
#lineData <- stroke$peak_4sec_20_dyn.xz
#density_lines(lineData, "firebrick1")
lineData <- stroke$peak_4sec_30_dyn.xz
density_lines(lineData, "red")
lineData <- stroke$peak_4sec_40_dyn.xz
density_lines(lineData, "red4")
lineData <- stroke$peak_4sec_50_dyn.xz
density_lines(lineData, "violetred4")
legend(-22,32,lty=c(1,1),cex=0.8,bty="n",bg="n",
c(#"RM:0.4; G:10","RM:0.4; G:20",
"RM:0.4; G:30","RM:0.4; G:40","RM:0.4; G:50",
#"RM:1; G:10","RM:1; G:20",
"RM:1; G:30","RM:1; G:40","RM:1; G:50",
#"RM:2; G:10","RM:2; G:20",
"RM:2; G:30","RM:2; G:40","RM:2; G:50",
#"RM:3; G:10","RM:3; G:20",
"RM:3; G:30","RM:3; G:40","RM:3; G:50",
#"RM:4; G:10","RM:4; G:20",
"RM:4; G:30","RM:4; G:40","RM:4; G:50"),
col=c(#"darkolivegreen1","chartreuse",
"chartreuse3","chartreuse4","darkgreen",
#"cadetblue1","deepskyblue",
"blue","cadetblue4","blue4",
#"tan","orange","darkorange",
"coral","darkorange4",
#"indianred","firebrick1",
"red","red4","violetred4"))
legend(-50,70,lty=c(1,1),cex=0.8,bty="n",bg="n",
c(#"RM:0.4; G:10","RM:0.4; G:20",
"RM:0.4; G:30","RM:0.4; G:40","RM:0.4; G:50",
#"RM:1; G:10","RM:1; G:20",
"RM:1; G:30","RM:1; G:40","RM:1; G:50",
#"RM:2; G:10","RM:2; G:20",
"RM:2; G:30","RM:2; G:40","RM:2; G:50",
#"RM:3; G:10","RM:3; G:20",
"RM:3; G:30","RM:3; G:40","RM:3; G:50",
#"RM:4; G:10","RM:4; G:20",
"RM:4; G:30","RM:4; G:40","RM:4; G:50"),
col=c(#"darkolivegreen1","chartreuse",
"chartreuse3","chartreuse4","darkgreen",
#"cadetblue1","deepskyblue",
"blue","cadetblue4","blue4",
#"tan","orange","darkorange",
"coral","darkorange4",
#"indianred","firebrick1",
"red","red4","violetred4"))
t.test(predictions$peak_0.4sec_50_dyn.xz,mu=0)
t.test(predictions$peak_1sec_50_dyn.xz,mu=0)
#####Make the plots
rm(list=ls())
#########density plot
load("data/tape/Xpredictions.RData")
source("r/tape/Functions.R")
##add animal info and actual number of strokes to the data frame
dat<-read.csv("data/tape/odba_vo2_data.csv")
predictions<-merge(predictions,dat[,c(2,18:23)],all.x = TRUE, by = "id2")
predictions<-predictions[!predictions$id2=="Rocky31-10-14_1.csv",]
#predictions<-predictions[complete.cases(predictions$stroke_rate),]
predictions$name<-droplevels(predictions$name)
##find the differences
names(predictions)
stroke<-data.frame(predictions[c(1,27:32)],
apply(predictions[2:26],2,diffs))
stroke<-stroke[complete.cases(stroke),]
###Summarise the differences
summary.x<-apply(X = stroke[7:32],2,summary)
range.x<-apply(stroke[7:32],2,function(x) max(x)-min(x))
median.x<-apply(stroke[7:32],2,median)
mean.x<-apply(X = stroke[7:32],2,mean)
sd.x<-apply(X = stroke[7:32],2,sd)
ztest.x<-apply(X = stroke[7:32],2,function(x) z.test(a=x,mu=0,var=15))
t.test(predictions$peak_0.4sec_50_dyn.xz)
t.test(predictions$peak_0.4sec_50_dyn.xz,mu=0)
t.test(predictions$peak_0.4sec_50_dyn.x,mu=0)
t.test(predictions$peak_2sec_50_dyn.x,mu=0)
t.test(predictions$peak_3sec_50_dyn.x,mu=0)
mean(predictions$peak_3sec_50_dyn.x)
t.test(stroke$peak_3sec_50_dyn.x,mu=0)
t.test(stroke$peak_2sec_50_dyn.x,mu=0)
t.test(stroke$peak_1sec_50_dyn.x,mu=0)
t.test(stroke$peak_1sec_40_dyn.x,mu=0)
t.test(stroke$peak_0.4sec_40_dyn.x,mu=0)
t.test(stroke$peak_0.4sec_40_dyn.x,mu=0)$pvalue
t.test(stroke$peak_0.4sec_40_dyn.x,mu=0)$p.value
ztest.x<-apply(X = stroke[7:32],2,function(x) t.test(a=x,mu=0)$p.value)
ttest.x<-sapply(X = stroke[7:32],2,function(x) t.test(a=x,mu=0))
ttest.x<-sapply(X = stroke[7:32],function(x) t.test(a=x,mu=0))
ttest.x<-sapply(X = stroke[7:32],function(x) t.test)
ttest.x
ttest.x<-apply(X = stroke[7:32],2,t.test)
ttest.x
